#!/usr/bin/env bun

const inputPath = Bun.argv[2] || 'satellites.toml';
const outputPath = 'src/custom-satellites.ts';

async function main() {
  const text = await Bun.file(inputPath).text();
  const data = Bun.TOML.parse(text) as any;
  if (!Array.isArray(data.satellite)) {
    throw new Error('satellites.toml must contain [[satellite]] sections');
  }

  const sats = data.satellite.map((s: any) => ({
    type: 'elements',
    elements: {
      satnum: Number(s.satnum),
      epoch: new Date(s.epoch),
      semiMajorAxisKm: Number(s.semiMajorAxisKm),
      eccentricity: Number(s.eccentricity),
      inclinationDeg: Number(s.inclinationDeg),
      raanDeg: Number(s.raanDeg),
      argPerigeeDeg: Number(s.argPerigeeDeg),
      meanAnomalyDeg: Number(s.meanAnomalyDeg),
    },
  }));

  const file = `// This file is auto-generated by scripts/generate-satellites.ts\n` +
    `// Do not edit manually.\n` +
    `import type { SatelliteSpec } from './satellites';\n` +
    `export const CUSTOM_SATELLITES: SatelliteSpec[] = ${JSON.stringify(sats, null, 2)};\n`;

  await Bun.write(outputPath, file);
  console.log(`wrote ${outputPath} with ${sats.length} satellites`);
}

main().catch((err) => {
  console.error(err);
  process.exit(1);
});
